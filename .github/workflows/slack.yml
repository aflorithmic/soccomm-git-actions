name: slack

on: 
  workflow_call:
    secrets:
      SLACK_URL:
        required: true


env:
  # For all events
  REPO_NAME: ${{ github.event.repository.name }}
  REPO_URL: ${{ github.event.repository.html_url }}
  SHA: ${{ github.sha }}
  EVENT_NAME: ${{ github.event_name }}
  ACTOR_URL: ${{ github.event.sender.html_url }}
  ACTOR: ${{ github.actor }}
  
  # for PR
  PR_URL: ${{ github.event.pull_request._links.html.href }}
  PR_TITLE: ${{ github.event.pull_request.title }}
  PR_TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}

  # for merge 
  COMPARE_URL: ${{ github.event.compare }}
  PR_SUMMARY: ${{ github.event.head_commit.message }}

jobs:
  slack:
    runs-on: ubuntu-latest
    steps:

    - name: get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::${GITHUB_REF#refs/heads/}

    - name: slack-pr
      if: ${{ env.EVENT_NAME == 'pull_request' }}
      run: >
        DATA='{"text": ":salt: *New pull request for <${{ env.REPO_URL }}|${{ env. REPO_NAME }}>*\n
        Title: ${{ env.PR_TITLE}}\n
        Branch: <${{ env.REPO_URL }}/tree/${{ env.PR_TARGET_BRANCH }}|${{ env.PR_TARGET_BRANCH }}>\n
        Opened by <${{ env.ACTOR_URL }}|${{ env.ACTOR }}>\n
        Check it out <${{ env.PR_URL }}|here>"}' &&
        echo $DATA &&
        curl -X POST ${{ secrets.SLACK_URL }} 
        -H "Content-Type: application/json" 
        --data "$DATA"

    - name: slack-merge
      if: ${{ env.EVENT_NAME == 'push' }}
      run: >
        IN="${{ env.PR_SUMMARY }}" && 
        MESSAGE=${IN##*$'\n'} && 
        DATA='{"text": ":ramen: *New push to <${{ env.REPO_URL }}/tree/${{ steps.get_branch.outputs.BRANCH }}|${{ steps.get_branch.outputs.BRANCH }}> for <${{ env.REPO_URL }}|${{ env. REPO_NAME }}>*\n
        Message: '"$MESSAGE"'\n
        Merged by: <${{ env.ACTOR_URL }}|${{ env.ACTOR }}>\n
        See the full changes <${{ env.COMPARE_URL }}|here>"}' &&
        echo $DATA &&   
        curl -X POST ${{ secrets.SLACK_URL }} 
        -H "Content-Type: application/json" 
        --data "$DATA"
